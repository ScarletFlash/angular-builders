import type { Config } from '@jest/types';

const transpilingOptions: Config.InitialOptions = {
  testTimeout: 10_000,
  transform: {
    '^.+\\.(ts)$': 'ts-jest',
  },
  preset: 'ts-jest',
  testEnvironment: 'jsdom',
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.test-unit.json',
      diagnostics: true,
    },
  },
  errorOnDeprecated: true,
  extensionsToTreatAsEsm: ['.ts'],
  moduleNameMapper: {},
};

const baseConfig: Config.InitialOptions = {
  ...transpilingOptions,
  clearMocks: true,
  verbose: true,
  rootDir: './',
  roots: ['<rootDir>/'],
  coverageDirectory: '<rootDir>/coverage',
  moduleDirectories: ['node_modules'],
  testRegex: '\\.spec\\.ts$',
  projects: [
    {
      ...transpilingOptions,
      displayName: 'Circular Dependencies Linter',
      testRegex: '\\/circular-dependencies-linter\\/src\\/.*\\.spec\\.ts$',
    },
  ],
  collectCoverageFrom: [
    '**/*.ts', // all TypeScript files
    '!*.config.ts', // except config files
    '!**/index.ts', // except autogenerated files
    '!**/do-build.ts', // except building tools
  ],
};

const config: Config.InitialOptions = {
  ...baseConfig,
  collectCoverage: false,
};
export default config;
