name: NPM Publish

on:
  release:
    types: [published]

jobs:
  install:
    runs-on: ubuntu-latest
    name: Prepare node_modules
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ./node_modules
            ./.npm-cache
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-dependencies
      - name: 'Install dependencies'
        run: npm ci
      - name: 'Pack prepared workspace files'
        run: tar cf workspace.tar ./
      - uses: actions/upload-artifact@v2
        with:
          name: workspace
          path: workspace.tar

  build:
    needs: install
    runs-on: ubuntu-latest
    name: Generate bundle for all provided Angular Builders
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: workspace
      - name: 'Unpack prepared workspace files'
        run: tar xf workspace.tar && rm -f workspace.tar
      - run: npm run build
      - name: 'Pack generated bundle'
        run: tar cf bundle.tar ./
      - uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: bundle.tar

  publish:
    needs: build
    runs-on: ubuntu-latest
    name: Publish bundle to NPM as package
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bundle
      - name: 'Unpack generated bundle'
        run: tar xf bundle.tar && rm -f bundle.tar
      - name: 'Authorize to NPM Registry'
        run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: 'Update package version'
        run: |
          cd ./dist
          npm version "${{ github.ref }}"
          cd ..
      - name: 'Publish bundle to NPM'
        # run: npm publish ./dist
        run: ls -a ./dist && cat .npmrc && cat ./dist/package.json
